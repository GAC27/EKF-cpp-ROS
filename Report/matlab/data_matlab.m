clear all
load data72.mat  
%load data10.mat  


% With R=diag(sigma_d^2,sigma_theta^2) <-- check slides
%   R=[  0.000225 0
%        0 7.6154*10^(-7)];
   
%cov_0=cov_0/5;
%Q=Q/10;
%R=R*43;
cov_0_1=cov_0 + Q;

for i=1:size(h_1,2)
    H_check(2*i-1,1)=cos(h_1(2,i));
    H_check(2*i,1)=-sin(h_1(2,i))/h_1(1,i);
    H_check(2*i-1,2)=sin(h_1(2,i));
    H_check(2*i,2)=cos(h_1(2,i))/h_1(1,i);
    H_check(2*i-1,3)=0;
    H_check(2*i,3)=-1;
end




for i=1:2:size(S_h1,1);   
    gamma(ceil(i/2))=(v_1(i:i+1).'*S_h1(i:i+1,:)*v_1(i:i+1));
end
gamma=gamma.';
n=size(H_1,1)/2;
K_try=zeros(3,2,n);
move_try=zeros(3,1,n);
delta_cov_try=zeros(3,3,n);
for i=1:2:size(H_1,1)
    K_try(:,:,ceil(i/2))=cov_0_1*H_1(i:i+1,:).'/(H_1(i:i+1,:)*cov_0_1*H_1(i:i+1,:).'+R);
    move_try(:,:,ceil(i/2))=K_try(:,:,ceil(i/2))*(v_1_calc(i:i+1)).';
    delta_cov_try(:,:,ceil(i/2))=K_try(:,:,ceil(i/2))*H_1(i:i+1,:);
end
state_2_try=state_1+sum(move_try,3);
cov_1_try=(eye(3)-sum(delta_cov_try,3))*cov_0_1;

S_1=zeros(size(S_h1,1),size(S_h1,1));
for i=1:2:size(S_h1,1);
    S_1(i,i)=S_h1(i,1);
    S_1(i,i+1)=S_h1(i,2);
    S_1(i+1,i)=S_h1(i+1,1);
    S_1(i+1,i+1)=S_h1(i+1,2);
end
  
% for i=1:size(v_1,1)
%     if (mod(i,2)==1)
%         v(ceil(i/2),1)=v_1(i);
%     else 
%         v(i/2,2)=v_1(i);
%     end
% end

cov_1_calc=cov_0_1-K_1*S_1*K_1.';

state_2_calc=state_1+K_1*v_1;

%H_1=(cov_0_1\K_1*S_1).';
%H_1(2:2:end,3)=-1;
% check_K=cov_0_1*H.'/S_1;


%R=R*size(H_1,1);



for i=1:2:size(H_1,1);
    help=H_1(i:i+1,:)*cov_0_1*H_1(i:i+1,:).'+R;
    check_S_1(i,i)=help(1,1);
    check_S_1(i+1,i)=help(2,1);
    check_S_1(i,i+1)=help(1,2);
    check_S_1(i+1,i+1)=help(2,2);
end

K_checkS_1= cov_0_1*H_1.'/check_S_1;
move_check=K_checkS_1*v_1;%/(size(K_checkS_1,2)/2);
state_checkS_1=state_1+move_check;
cov_1_check=cov_0_1-K_checkS_1*check_S_1*K_checkS_1.';

check_S_dif_1=check_S_1-S_1;

clear R
%%%%%%%%%%%%%%

figure
subplot(3,3,9)
plot(v_1(1:2:end))
xlabel('lasers')
ylabel('V')
subplot(3,3,6)
plot(K_checkS_1(1,1:2:end))
xlabel('lasers')
ylabel('K_x')
subplot(3,3,8)
plot(K_checkS_1(2,1:2:end))
xlabel('lasers')
ylabel('K_y')
subplot(3,3,3)
plot((K_checkS_1(1,1:2:end).*(v_1(1:2:end)).'))
xlabel('lasers')
ylabel('K_x*v')
subplot(3,3,7)
plot((K_checkS_1(2,1:2:end).*(v_1(1:2:end)).'))
xlabel('lasers')
ylabel('K_y*v')
subplot(3,3,5)
scatter([0,move_check(1)],[move_check(2),0])
xlabel('x movement')
ylabel('y movement')
axis equal
grid on
subplot(3,3,1)
scatter(state_1(1),state_1(2),'k')
%%%%%%%%%%%%%%%%%
covariance = eye(3)*0.03;
[eigenvec, eigenval ] = eig(covariance);
[largest_eigenvec_ind_c, r] = find(eigenval == max(max(eigenval)));
largest_eigenvec = eigenvec(:, largest_eigenvec_ind_c);
largest_eigenval = max(max(eigenval));
if(largest_eigenvec_ind_c == 1)
    smallest_eigenval = max(eigenval(:,2));
    smallest_eigenvec = eigenvec(:,2);
else
    smallest_eigenval = max(eigenval(:,1));
    smallest_eigenvec = eigenvec(1,:);
end
angle = atan2(largest_eigenvec(2), largest_eigenvec(1));
if(angle < 0)
    angle = angle + 2*pi;
end
avg = state_1(1:2);
chisquare_val = 2.4477;
theta_grid = linspace(0,2*pi);
phi = angle;
X0=avg(1);
Y0=avg(2);
a=chisquare_val*sqrt(largest_eigenval);
b=chisquare_val*sqrt(smallest_eigenval); 
ellipse_x_r  = a*cos( theta_grid );
ellipse_y_r  = b*sin( theta_grid );
R = [ cos(phi) sin(phi); -sin(phi) cos(phi) ];
r_ellipse = [ellipse_x_r;ellipse_y_r]' * R;
plot(r_ellipse(:,1) + X0,r_ellipse(:,2) + Y0,'b')
hold on
scatter(X0,Y0,'b')
clear a angle avg b  covariance data eigenval eigenvec ellipse_x_r ellipse_y_r 
clear y2 y1 Y0 X0 x theta_grid smallest_eigenval smallest_eigenvec s r_ellipse R r phi largest_eigenval
clear chisquare_val largest_eigenvec largest_eigenvec_ind_c
%%%%%%%%%%%%%%%%%%%%%
covariance = cov_1_check(1:2,1:2);
[eigenvec, eigenval ] = eig(covariance);
[largest_eigenvec_ind_c, r] = find(eigenval == max(max(eigenval)));
largest_eigenvec = eigenvec(:, largest_eigenvec_ind_c);
largest_eigenval = max(max(eigenval));
if(largest_eigenvec_ind_c == 1)
    smallest_eigenval = max(eigenval(:,2));
    smallest_eigenvec = eigenvec(:,2);
else
    smallest_eigenval = max(eigenval(:,1));
    smallest_eigenvec = eigenvec(1,:);
end
angle = atan2(largest_eigenvec(2), largest_eigenvec(1));
if(angle < 0)
    angle = angle + 2*pi;
end
avg = state_checkS_1(1:2);
chisquare_val = 2.4477;
theta_grid = linspace(0,2*pi);
phi = angle;
X0=avg(1);
Y0=avg(2);
a=chisquare_val*sqrt(largest_eigenval);
b=chisquare_val*sqrt(smallest_eigenval); 
ellipse_x_r  = a*cos( theta_grid );
ellipse_y_r  = b*sin( theta_grid );
R = [ cos(phi) sin(phi); -sin(phi) cos(phi) ];
r_ellipse = [ellipse_x_r;ellipse_y_r]' * R;
plot(r_ellipse(:,1) + X0,r_ellipse(:,2) + Y0,'r')
scatter(X0,Y0,'r')
xlabel('x position')
ylabel('y position')
grid on
axis equal
hold off
clear a angle avg b  covariance data eigenval eigenvec ellipse_x_r ellipse_y_r 
clear y2 y1 Y0 X0 x theta_grid smallest_eigenval smallest_eigenvec s r_ellipse R r phi largest_eigenval
clear chisquare_val largest_eigenvec largest_eigenvec_ind_c


%syms x
%check_H=vpasolve(S_1-eye(size(H_1,1))*0.1==x*cov_0_1*x.',x);
clear help i 
%%
state_2=[0.339283 
    -10.8611 
    1.57386];

cov_1= [-24.2428 0.796493        0
0.796493  -20.723        0
       0        0      0.6];

     
cov_1_1=cov_1 + Q;


K_2=[-0.868086     -1.0753   -0.897024   -0.925534   -0.922617   -0.782361   -0.944687   -0.673921   -0.963488   -0.517276   -0.978676   -0.395956   -0.990349    -0.29503   -0.998505    -0.19308    -1.00312  -0.0905026    -1.00418   0.0117788    -1.00168    0.114943   -0.995671    0.217024   -0.986173     0.31816   -0.973246    0.417979    -0.95671     0.53859   -0.936749    0.666189   -0.913871    0.768031   -0.887431    0.903386   -0.858474     1.00287   -0.825385     1.19087   -0.790087     1.34208   -0.751287      1.5572   -0.709883        1.79   -0.664947      2.1209   -0.617666     2.49604   -0.566792     3.03979   -0.515809     3.55197   -0.459585     4.51751   -0.395705     6.45157   -0.313419     11.4945    -0.27549     12.6078   -0.251536     10.9828   -0.218701      9.7229   -0.181094     9.84003    -0.14076     9.34098   0.0365572    -11.1888   0.0637522       -3.68     0.13588    -3.64504   0.0366626      8.5124   0.0741582     9.06148   0.0986729     10.3497    0.128936      11.148    0.247916     7.10228    0.348591     4.31846    0.419875     3.16502    0.480873     2.52942      0.5393     1.93498    0.590809     1.65072    0.639731     1.39484    0.685289     1.21701    0.727707     1.09954     0.76798    0.941088    0.805006    0.834316    0.839166    0.731562    0.870339    0.633241     0.89842    0.539729    0.923321    0.451361    0.944969     0.36843    0.963283     0.30807    0.978285    0.233119      0.9899    0.174248    0.998109    0.114782     1.00288   0.0549325     1.00421 -0.00508683     1.00209  -0.0650634     0.99654   -0.124785    0.987574   -0.184042    0.975236   -0.242626    0.959577   -0.300336    0.940491   -0.377557    0.918353   -0.436092    0.892863   -0.520389
  0.505095      -1.896    0.451602    -1.87842     0.39661    -1.85197     0.34064    -1.89543    0.283065    -1.77534    0.224975    -1.72664    0.166231    -1.74667    0.106911    -1.76049    0.047245    -1.76807  -0.0121362    -1.69386   -0.072199    -1.76444   -0.131519     -1.7533   -0.190272    -1.73602    -0.24824    -1.71271   -0.306028    -1.75679   -0.362735     -1.7938   -0.417158    -1.74926    -0.47094    -1.77033   -0.521961    -1.71171   -0.573011    -1.78586   -0.620886    -1.77919   -0.667449    -1.83231   -0.711455    -1.87367   -0.753793    -1.97611   -0.793162    -2.06809   -0.830507    -2.23381   -0.863224     -2.3047   -0.894726    -2.57093   -0.925441    -3.19009   -0.958695    -4.87376   -0.968765    -4.50024   -0.973545    -3.21364   -0.980952    -2.24041   -0.988644    -1.67175   -0.995565    -1.03262    -1.00825    0.581382    -1.00459  -0.0230716   -0.998274   -0.235252    -1.00801     1.04914    -1.00799     1.65645    -1.01021     2.52153    -1.01139     3.41361   -0.979731     2.63533   -0.944247     1.89475   -0.913673     1.61417   -0.882633     1.48123   -0.847842     1.28972   -0.812635     1.24461   -0.774577     1.18484   -0.734476     1.16205    -0.69239     1.17938    -0.64734     1.13501   -0.600594     1.13437   -0.551784      1.1263   -0.501103     1.11129    -0.44875     1.08982   -0.394926     1.06242   -0.339833     1.02959   -0.283757     1.04939   -0.226669     1.00716   -0.168883     1.01899   -0.110521     1.02731  -0.0517894      1.0321  0.00710164     1.03334   0.0659434     1.03104    0.124528      1.0252    0.182649     1.01585    0.240104     1.00303    0.296692    0.986792    0.352679     1.02299    0.406968     0.99875    0.460316     1.02493



 S_h2=[ -23.4435 -0.629865
-0.629865  -5.28007
 -23.5627 -0.53858
-0.53858 -5.62113
  -23.6591 -0.434355
-0.434355  -6.00007
  -23.7315 -0.308186
-0.308186  -5.97427
  -23.7789 -0.189148
-0.189148   -6.8951
   -23.8006 -0.0495609
-0.0495609   -7.42528
  -23.7964 0.0968972
0.0968972  -7.42709
 -23.7663 0.242047
0.242047 -7.44003
 -23.7107 0.383927
0.383927 -7.46392
 -23.6305  0.53827
 0.53827 -8.09816
 -23.5265 0.650285
0.650285 -7.54313
 -23.4003 0.771167
0.771167 -7.59739
 -23.2536 0.881632
0.881632 -7.66047
 -23.0884 0.980191
0.980191 -7.73153
 -22.9068  1.03169
 1.03169 -7.24665
 -22.7113  1.06651
 1.06651 -6.80887
 -22.5047  1.11867
 1.11867 -6.88714
 -22.2895  1.12122
 1.12122 -6.48821
 -22.0689  1.14202
 1.14202 -6.56686
 -21.8457  1.08276
 1.08276 -5.78722
 -21.6229  1.04381
 1.04381 -5.47648
 -21.4037 0.967418
0.967418 -4.86001
 -21.1908  0.88615
 0.88615 -4.32817
 -20.9873 0.782709
0.782709 -3.63498
 -20.7958 0.682726
0.682726 -3.06666
  -20.619 0.574593
0.574593 -2.44526
 -20.4592 0.484022
0.484022 -2.07024
 -20.3185 0.383311
0.383311 -1.55155
  -20.199 0.284724
0.284724 -1.00601
  -20.1022  0.196285
 0.196285 -0.512184
  -20.0293  0.137742
 0.137742 -0.472239
  -19.9815 0.0821136
0.0821136 -0.568025
  -19.9593 0.0222333
0.0222333 -0.670055
  -19.9631 -0.040244
-0.040244 -0.669762
  -19.9927 -0.103627
-0.103627 -0.720796
  -20.0478 -0.107238
-0.107238  0.390914
 -20.1277 -0.100367
-0.100367  0.817322
  -20.2312 -0.125503
-0.125503  0.818992
   -20.357 -0.342463
-0.342463 -0.803539
  -20.5034 -0.386099
-0.386099 -0.734177
  -20.6683 -0.417436
-0.417436 -0.614578
  -20.8497 -0.447673
-0.447673 -0.551068
  -21.0449 -0.528666
-0.528666 -0.927139
  -21.2514 -0.654617
-0.654617  -1.73591
  -21.4664 -0.774106
-0.774106  -2.60799
   -21.687 -0.879311
-0.879311  -3.48707
 -21.9102 -1.02505
-1.02505 -5.04344
  -22.133 -1.10462
-1.10462  -6.1016
 -22.3523 -1.18301
-1.18301 -7.47018
 -22.5653 -1.21753
-1.21753 -8.58775
  -22.769 -1.19593
-1.19593 -9.18634
 -22.9607 -1.19965
-1.19965  -10.704
 -23.1378 -1.13993
-1.13993  -11.547
  -23.298  -1.0593
 -1.0593 -12.5022
 -23.4389 -0.956899
-0.956899   -13.591
  -23.5589 -0.831897
-0.831897  -14.8402
  -23.6561 -0.683508
-0.683508  -16.2829
  -23.7294 -0.510961
-0.510961  -17.9604
  -23.7776 -0.298171
-0.298171  -17.9145
   -23.8003 -0.0855263
-0.0855263   -19.9014
  -23.797 0.143565
0.143565 -19.9048
 -23.7678 0.370717
0.370717 -19.9355
 -23.7131 0.592862
0.592862  -19.993
 -23.6337    0.807
   0.807 -20.0766
 -23.5305  1.01024
 1.01024 -20.1851
 -23.4051  1.19983
 1.19983  -20.317
 -23.2591  1.37322
 1.37322 -20.4706
 -23.0944  1.52807
 1.52807 -20.6438
 -22.9134  1.66227
 1.66227 -20.8343
 -22.7184  1.68749
 1.68749 -18.9227
  -22.512    1.771
   1.771 -19.1191
 -22.2972  1.74545
 1.74545 -17.4588];

S_2=zeros(144,144);
for i=1:2:size(S_h2,1);
    S_2(i,i)=S_h2(i,1);
    S_2(i,i+1)=S_h2(i,2);
    S_2(i+1,i)=S_h2(i+1,1);
    S_2(i+1,i+1)=S_h2(i+1,2);
end
 
 

v_2=[-0.636231
        0
-0.606209
        0
-0.564546
        0
-0.602926
        0
-0.526225
        0
-0.495959
        0
-0.522883
        0
-0.521729
        0
 -0.54652
        0
-0.479848
        0
-0.541408
        0
-0.522773
        0
-0.515563
        0
 -0.49343
        0
-0.521889
        0
-0.556124
        0
-0.540151
        0
 -0.55744
        0
-0.533251
        0
-0.577821
        0
-0.560726
        0
-0.612268
        0
-0.643629
        0
-0.706076
        0
-0.761499
        0
-0.834784
        0
-0.836522
        0
-0.894856
        0
 -1.01409
        0
 -1.18047
        0
 -1.30299
        0
 -1.24756
        0
 -1.18482
        0
 -1.21551
        0
 -1.16425
        0
 -3.09698
        0
 -5.56284
        0
 -5.54342
        0
 0.777539
        0
 0.795281
        0
 0.724768
        0
 0.744804
        0
  1.18131
        0
  1.79297
        0
 0.190068
        0
 0.516778
        0
 0.919482
        0
  1.19013
        0
  1.47717
        0
  1.74837
        0
  1.97616
        0
  2.31928
        0
  2.65745
        0
  2.61092
        0
  2.51837
        0
  2.47469
        0
  2.41523
        0
  2.39864
        0
  2.32553
        0
  2.32185
        0
  2.28942
        0
   2.2611
        0
  2.23908
        0
  2.26495
        0
  2.27711
        0
  2.27467
        0
  2.29047
        0
  2.32434
        0
  2.41399
        0
  2.41247
        0
   2.5095
        0
  2.54368
        0];
      
% for i=1:size(v_1,1)
%     if (mod(i,2)==1)
%         v(ceil(i/2),1)=v_1(i);
%     else 
%         v(i/2,2)=v_1(i);
%     end
% end


cov_2_calc=cov_1_1-K_2*S_2*K_2.';

state_3_calc=state_2+K_2*v_2;

S_2_inv=inv(S_2);

H_2=(cov_1_1\K_2*S_2).';
% check_K=cov_0_1*H.'/S_1;

for i=1:2:size(H_2,1);
    help=H_2(i:i+1,:)*cov_0_1*H_2(i:i+1,:).'+R;
    check_S_2(i,i)=help(1,1);
    check_S_2(i+1,i)=help(2,1);
    check_S_2(i,i+1)=help(1,2);
    check_S_2(i+1,i+1)=help(2,2);
end

K_checkS_2= cov_1_1*H_2.'/check_S_2;
state_checkS_2=state_2+K_checkS_2*v_2;
cov_2_check=cov_1_1-K_checkS_2*check_S_2*K_checkS_2.';

check_dif_2=check_S_2-S_2;


%%
clear i S_h1 help S_h2